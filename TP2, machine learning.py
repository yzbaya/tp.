# -*- coding: utf-8 -*-
"""Bienvenue dans Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

# Importer les données à partir du fichier CSV
dataset = pd.read_csv('Regression-AreaPrice.csv')

# Afficher les 5 premières lignes du dataframe
print(dataset.head(5))

# Créer les vecteurs X et y
X = dataset['Price'].values.reshape(-1, 1)  # Choisir la colonne 'Price' comme entrée
y = dataset['Area'].values  # Choisir la colonne 'Area' comme sortie

# Tracer le nuage de points : Prix en fonction de la Surface
plt.scatter(X, y, marker='o', color='b')
plt.xlabel('Price (m²)')
plt.ylabel('Area ($)')
plt.title('Nuage de points : Prix en fonction de la Surface')
plt.show()

# Créer un modèle de régression linéaire et lancer l'apprentissage
model = LinearRegression()
model.fit(X, y)

# Afficher les coefficients du modèle
coef = model.coef_
intercept = model.intercept_
print(f'Coefficient de pente : {coef[0]}')
print(f'Ordonnée à l"origine : {intercept}')

# Lancer la prédiction pour une surface 400
nouvelle_surface = np.array([400]).reshape(-1, 1)  # La surface pour la prédiction
prediction = model.predict(nouvelle_surface)
print(f"Pour une surface de 400 m², le prix prédit est : {prediction[0]}")

# Lancer la prédiction pour tout le vecteur X
predictions = model.predict(X)
for i, prediction in enumerate(predictions):
    print(f"Pour une surface de {X[i][0]} m², le prix prédit est : {prediction}")

# Calculer le score R2
r2 = r2_score(y, predictions)
print(f"Score R2 : {r2}")
